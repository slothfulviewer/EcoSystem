# Generated by Django 5.0.3 on 2024-05-05 09:13

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Anchor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(help_text="输入主播名称", max_length=200)),
                (
                    "hire_date",
                    models.DateField(default="2024/05/01", help_text="输入主播的入职时间"),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=20.0,
                        help_text="输入主播的粉丝量（W人）",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "live_house",
                    models.CharField(
                        blank=True, help_text="输入主播的直播间网址", max_length=200, null=True
                    ),
                ),
                (
                    "base_salary",
                    models.DecimalField(
                        decimal_places=2,
                        default=5000,
                        help_text="输入主播的基本工资(单场/元)",
                        max_digits=10,
                    ),
                ),
                (
                    "commission",
                    models.DecimalField(
                        decimal_places=2,
                        default=5,
                        help_text="输入近三十天主播的佣金率(%)",
                        max_digits=5,
                    ),
                ),
                (
                    "CTR",
                    models.DecimalField(
                        decimal_places=2,
                        default=10.0,
                        help_text="历史平均穿透率",
                        max_digits=5,
                    ),
                ),
                (
                    "RPM",
                    models.DecimalField(
                        decimal_places=2,
                        default=1000,
                        help_text="近期主播分均产出",
                        max_digits=10,
                    ),
                ),
                (
                    "UV_func",
                    models.CharField(
                        blank=True,
                        help_text="输出近三十天UV拟合函数，格式为a*x^3+b*x^2+c*x+0.52",
                        max_length=200,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "permissions": (("can_renew_anchor", "主播待遇与信息修正"),),
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="输入商品类别名称（例如：日用品，食品）", max_length=200, unique=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LivingTime",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "start_time",
                    models.IntegerField(default=0, help_text="输入主播的直播时间", null=True),
                ),
                (
                    "finally_time",
                    models.IntegerField(default=24, help_text="输入主播的下播时间", null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AnchorAge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "mini",
                    models.DecimalField(decimal_places=2, default=20, max_digits=5),
                ),
                (
                    "low",
                    models.DecimalField(decimal_places=2, default=20, max_digits=5),
                ),
                (
                    "medi",
                    models.DecimalField(decimal_places=2, default=20, max_digits=5),
                ),
                (
                    "high",
                    models.DecimalField(decimal_places=2, default=20, max_digits=5),
                ),
                (
                    "maxi",
                    models.DecimalField(decimal_places=2, default=20, max_digits=5),
                ),
                (
                    "anchor",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Anchor_Age_Level",
                        to="catalog.anchor",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AvgCostLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "mini",
                    models.DecimalField(decimal_places=2, default=20.0, max_digits=5),
                ),
                (
                    "low",
                    models.DecimalField(decimal_places=2, default=20.0, max_digits=5),
                ),
                (
                    "medi",
                    models.DecimalField(decimal_places=2, default=20.0, max_digits=5),
                ),
                (
                    "high",
                    models.DecimalField(decimal_places=2, default=20.0, max_digits=5),
                ),
                (
                    "super",
                    models.DecimalField(decimal_places=2, default=20.0, max_digits=5),
                ),
                (
                    "maxi",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "anchor",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Cost_Level",
                        to="catalog.anchor",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AnchorCategoryLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sales_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=20.0,
                        help_text="商品销售额占比",
                        max_digits=5,
                    ),
                ),
                (
                    "anchor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="catalog.anchor"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalog.category",
                    ),
                ),
            ],
            options={
                "ordering": ["sales_percentage"],
                "unique_together": {("anchor", "category")},
            },
        ),
        migrations.AddField(
            model_name="anchor",
            name="linked_Category",
            field=models.ManyToManyField(
                help_text="选择该主播历史热销商品类型",
                through="catalog.AnchorCategoryLink",
                to="catalog.category",
            ),
        ),
        migrations.CreateModel(
            name="Commodity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="输入商品名称", max_length=200, verbose_name="商品名称"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="输入商品价格",
                        max_digits=5,
                        verbose_name="商品价格(元)",
                    ),
                ),
                (
                    "commission_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="输入佣金比例(%)",
                        max_digits=5,
                        verbose_name="佣金比例（%）",
                    ),
                ),
                (
                    "history_sell",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="输入过去30天销量(w件)",
                        max_digits=5,
                        verbose_name="过去30天销量(w件)",
                    ),
                ),
                (
                    "history_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="输入过去30天浏览量(w次)",
                        max_digits=5,
                        verbose_name="过去30天浏览量(w次)",
                    ),
                ),
                (
                    "web_connect",
                    models.CharField(
                        blank=True,
                        default="www.buzhidao.com",
                        help_text="输入商品网址",
                        max_length=200,
                        null=True,
                        verbose_name="商品网址",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="catalog.category",
                    ),
                ),
            ],
            options={
                "ordering": ["category", "history_sell"],
                "permissions": (("can_add_commodity", "增加商品数据"),),
            },
        ),
        migrations.AddField(
            model_name="anchor",
            name="linked_Commodity",
            field=models.ManyToManyField(
                help_text="选择与该主播关联的商品", related_name="anchors", to="catalog.commodity"
            ),
        ),
        migrations.CreateModel(
            name="CommodityAge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "mini",
                    models.DecimalField(decimal_places=2, default=20.0, max_digits=5),
                ),
                (
                    "low",
                    models.DecimalField(decimal_places=2, default=20.0, max_digits=5),
                ),
                (
                    "medi",
                    models.DecimalField(decimal_places=2, default=20.0, max_digits=5),
                ),
                (
                    "high",
                    models.DecimalField(decimal_places=2, default=20.0, max_digits=5),
                ),
                (
                    "maxi",
                    models.DecimalField(decimal_places=2, default=20.0, max_digits=5),
                ),
                (
                    "Commodity",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Commodity_Age_Level",
                        to="catalog.commodity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CommodityGendered",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Male",
                    models.DecimalField(decimal_places=2, default=20.0, max_digits=5),
                ),
                (
                    "Female",
                    models.DecimalField(decimal_places=2, default=20.0, max_digits=5),
                ),
                (
                    "Commodity",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Commodity_gender",
                        to="catalog.commodity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Gendered",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Male",
                    models.DecimalField(decimal_places=2, default=50.0, max_digits=5),
                ),
                (
                    "Female",
                    models.DecimalField(decimal_places=2, default=50.0, max_digits=5),
                ),
                (
                    "anchor",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Anchor_gender",
                        to="catalog.anchor",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="anchor",
            name="linked_Time",
            field=models.ManyToManyField(
                help_text="选择该主播的直播时间段(UTC8+)", to="catalog.livingtime"
            ),
        ),
        migrations.CreateModel(
            name="SalesRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="整场直播内商品的唯一ID",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("sale_date", models.DateField(help_text="输入直播日期")),
                ("soldon_date", models.TimeField(help_text="输入上架时间", null=True)),
                ("soldout_date", models.TimeField(help_text="输入下架时间", null=True)),
                ("category", models.CharField(editable=False, max_length=200)),
                ("price", models.FloatField(editable=False, null=True)),
                ("count", models.FloatField(default=0, help_text="输入折扣率%", null=True)),
                (
                    "sale_amount",
                    models.DecimalField(
                        decimal_places=2, help_text="输入销售量", max_digits=10
                    ),
                ),
                (
                    "extra_commission",
                    models.DecimalField(
                        decimal_places=2, help_text="输入坑位费", max_digits=10
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        editable=False,
                        help_text="销售额",
                        max_digits=10,
                        verbose_name="销售额",
                    ),
                ),
                (
                    "total_income",
                    models.DecimalField(
                        decimal_places=2,
                        editable=False,
                        help_text="订单收入",
                        max_digits=10,
                        verbose_name="订单收入",
                    ),
                ),
                ("imprint", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[("o", "原价"), ("d", "折扣")],
                        default="o",
                        editable=False,
                        help_text="商品折扣与否",
                        max_length=1,
                    ),
                ),
                (
                    "anchor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="catalog.anchor"
                    ),
                ),
                (
                    "commodity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalog.commodity",
                    ),
                ),
            ],
            options={
                "ordering": ["sale_date"],
                "permissions": (("can_mark_returned", "标记商品打折"),),
            },
        ),
    ]
